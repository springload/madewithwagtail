version: "3.7"

services:
    application:
        restart: on-failure
        build:
            context: .
            dockerfile: docker/application/Dockerfile
            target: app-dev
        volumes:
            - ".:/madewithwagtail"
        ports:
            - "${PORT_PREFIX:-520}80:8000"
        env_file:
            - dev.env
        environment:
            VIRTUAL_HOST: "madewithwagtail.dev.springload.nz"
            VIRTUAL_PORT: 8000
            VIRTUAL_MEDIA_DOMAIN: "madewithwagtail.org/media"
        entrypoint: ["wait-for", "database:5432", "--"]
        command:
            [
                "/usr/local/bin/gunicorn",
                "--config",
                "/madewithwagtail/docker/gunicorn.py",
                "--reload",
                "madewithwagtail.wsgi",
            ]
        depends_on:
            - database
        networks:
            default:
                aliases:
                    - "madewithwagtail.dev.springload.nz"
            nginx-proxy:

    database:
        restart: on-failure
        image: postgres:13.3-alpine
        ports:
            - "${PORT_PREFIX:-520}32:5432" # default 32
        volumes:
            - "./docker/database:/docker-entrypoint-initdb.d/:ro"
        environment:
            WAGTAIL_SITE_HOSTNAME: "${SITE_HOSTNAME}"
            WAGTAIL_SITE_PORT: "443"
            POSTGRES_DB: "madewithwagtail"
            POSTGRES_USER: "postgres"
            POSTGRES_PASSWORD: "postgres"

networks:
  nginx-proxy:
    external: true
